version: "0.0.1.{build}"

environment:
  matrix:

    # Visual Studio (Python 2 & 3, 64 bit)

    - PYTHON_DIR: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_SHORT_VERSION: "2.7"
      PYTHON_ARCH: "64"
      BLOCK: "0"

    - PYTHON_DIR: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_SHORT_VERSION: "3.5"
      PYTHON_ARCH: "64"
      BLOCK: "0"

    - PYTHON_DIR: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x"
      PYTHON_SHORT_VERSION: "3.6"
      PYTHON_ARCH: "64"
      BLOCK: "0"

    - PYTHON_DIR: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_SHORT_VERSION: "3.7"
      PYTHON_ARCH: "64"
      BLOCK: "0"

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - python -m pip install scikit-ci==0.13.0 scikit-ci-addons==0.11.0
  - python -m ci_addons --install ../addons
  - python -m pip install twine

  - ps: ../addons/appveyor/rolling-build.ps1

install:
  - python -m ci install

build_script:
  - python -m ci build

test_script:
  - python -m ci test

after_test:
  - python -m ci after_test

artifacts:
  - path: dist/*
    name: pypiartefacts

on_finish:
  - ps: ../addons/appveyor/enable-worker-remote-access.ps1 -check_for_block

deploy_script:
  - echo checking deployment
  - ps: if ($env:APPVEYOR_REPO_NAME -notmatch 'Radiomics/pyradiomics') { appveyor exit }
  - ps: if ($env:APPVEYOR_REPO_TAG_NAME -notmatch '^v?[0-9]+(\.[0-9]+)*(rc\d+)?$') { appveyor exit }
  - echo starting PyPi deployment
  - twine upload dist/*.whl -u %PYPI_USER% -p %PYPI_PASSWORD%
  - echo starting Anaconda deployment
  - SET PATH=C:\Miniconda-x64\Scripts;%PATH%
  - ./conda/configure_conda.bat && conda build ./conda --python=%PYTHON_SHORT_VERSION% --croot C:/conda-bld
  - anaconda -t %ANACONDA_TOKEN% upload -u Radiomics C:/conda-bld/win-64/pyradiomics-*.tar.bz2 --force
  - echo finished deployment

matrix:
  fast_finish: false
