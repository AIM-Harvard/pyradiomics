version: "3.0.{build}"

image: Visual Studio 2019
environment:
  PYTHON_ARCH: "64"
  BLOCK: "0"

  matrix:

    # Visual Studio (Python 3, 64 bit)

    - PYTHON_DIR: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_SHORT_VERSION: "3.7"

    - PYTHON_DIR: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8.x"
      PYTHON_SHORT_VERSION: "3.8"

    - PYTHON_DIR: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9.x"
      PYTHON_SHORT_VERSION: "3.9"

init:
  - ps: $env:PATH=$env:PYTHON_DIR + ";" + $env:PYTHON_DIR + "\\Scripts;" + $env:PATH
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  - ps: python -c "import sys;print(sys.version, sys.executable)"
  - python -m pip install scikit-ci scikit-ci-addons
  - python -m ci_addons --install ../addons
  - python -m pip install twine

  - ps: ../addons/appveyor/rolling-build.ps1

install:
  - ci install

build_script:
  - ci build

test_script:
  - ci test

after_test:
  - ci after_test

artifacts:
  - path: dist/*
    name: pypiartefacts

on_finish:
  - ps: ../addons/appveyor/enable-worker-remote-access.ps1 -check_for_block

deploy_script:
  - echo checking deployment
  - ps: if ($env:APPVEYOR_REPO_NAME -notmatch 'AIM-Harvard/pyradiomics') { appveyor exit }
  - ps: if ($env:APPVEYOR_REPO_TAG_NAME -notmatch '^v?[0-9]+(\.[0-9]+)*((a|b|rc)[0-9]+)?$') { appveyor exit }
  - echo starting PyPi deployment
  - ps: if ($env:APPVEYOR_REPO_TAG_NAME -match '^v?[0-9]+(\.[0-9]+)*$') { twine upload dist/*.whl -u $Env:PYPI_USER -p $Env:PYPI_PASSWORD }
  - ps: if ($env:APPVEYOR_REPO_TAG_NAME -match '^v?[0-9]+(\.[0-9]+)*((a|b|rc)[0-9]+)$') { twine upload dist/*.whl -u $Env:PYPI_TEST_USER -p $Env:PYPI_TEST_PASSWORD -r testpypi }
  - echo starting Anaconda deployment
  - CALL C:\Miniconda3-x64\condabin\conda.bat activate
  - conda config --set always_yes yes --set changeps1 no --set anaconda_upload no
  - conda config --add channels simpleitk --add channels conda-forge
  - conda install conda-build
  - conda install anaconda-client
  - conda update -q conda
  - conda build ./conda --python=%PYTHON_SHORT_VERSION% --croot C:/conda-bld
  - anaconda -t %ANACONDA_TOKEN% upload -u Radiomics C:/conda-bld/win-64/pyradiomics-*.tar.bz2 --force
  - echo finished deployment

matrix:
  fast_finish: false
